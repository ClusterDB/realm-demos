name: Build

# TODO: See if we can speed up the xcodebuild command

# TODO: See if we can cache realm cli as it takes 2 minutes to install

# Will need to expand this to other branches
on: [push, pull_request]

jobs:    
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
#     Setting env vars based on https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable      
    - name: "Are we in the Main branch?"
      if: ${{ github.ref == 'refs/heads/main' }}
      run: | 
           echo "REALM_APP_ID=inventorysync-ctnnu" >> $GITHUB_ENV
           echo "We are in the main branch $REALM_APP_ID "
    - name: "Are we in Lauren's dev branch?"
      if: ${{ github.ref == 'refs/heads/lauren-dev' || github.head_ref == 'lauren-dev' }}
      run: | 
           echo "REALM_APP_ID=lauren-dev-pjiuk" >> $GITHUB_ENV
           echo "We are in Lauren's dev branch $REALM_APP_ID "
    - name: "Test env vars"
      run: |
           echo ${{ env.REALM_APP_ID }}
           echo "the realm app id is: $REALM_APP_ID"
           echo ${{ github.ref }}
           echo ${{ github.head_ref }}
    - name: "Set environment variables for pull requests"
      if: ${{ !env.REALM_APP_ID }}
      run: | 
           pwd
           cd inventory/export/sync/environments
           pwd
           cat testing.json
           echo "About to update testing.json"
           time=$(date +%s%N)
           printf '{\n     "values": {"databaseName": "InventorySync-%s"}\n}' "$time" > testing.json     
           cat testing.json
           cd inventory/export/sync/
           pwd
           cat realm_config.json
           echo "About to realm_config.json"
           sed -i txt 's/{/{ "environment": "testing",/' realm_config.json 
           cat realm_config.json
# Adding --realm-url and --atlas-url to login command to workaround authentication error           
#     - name: "Install the Realm CLI & authenticate (generic api key)"
#       if: ${{ env.REALM_APP_ID }}
#       run: | 
#            npm install -g mongodb-realm-cli@beta
#            realm-cli login --api-key="${{ secrets.REALM_API_PUBLIC_KEY }}" --private-api-key="${{ secrets.REALM_API_PRIVATE_KEY }}" --realm-url https://realm.mongodb.com --atlas-url https://cloud.mongodb.com
# Making these separate steps since specifying the project id isn't working so we need to use separate API keys
#     - name: "Install the Realm CLI & authenticate (Testing Project api key)"
#       if: ${{ !env.REALM_APP_ID }}
#       run: | 
#            npm install -g mongodb-realm-cli@beta
#            realm-cli login --api-key="${{ secrets.REALM_API_TESTING_PROJECT_PUBLIC_KEY }}" --private-api-key="${{ secrets.REALM_API_TESTING_PROJECT_PRIVATE_KEY }}" --realm-url https://realm.mongodb.com --atlas-url https://cloud.mongodb.com
#     - name: "Push updated copy of the Realm app if we have the Realm App ID"
#       if: ${{ env.REALM_APP_ID }}
#       run: | 
#            cd inventory/export/sync
#            realm-cli push --remote="${{ env.REALM_APP_ID }}"
#     - name: "Create a new Realm app for pull requests where the Realm app does not yet exist"
#       if: ${{ !env.REALM_APP_ID }}
#       run: |
#            cd inventory/export/sync
#            realm-cli import -y
#            output=$(realm-cli app describe)
#            app_id=$(echo $output | sed 's/^.*client_app_id": "\([^"]*\).*/\1/')
#            echo "REALM_APP_ID=$app_id" >> $GITHUB_ENV
#            echo "IS_DYNAMICALLY_GENERATED_APP=true" >> $GITHUB_ENV
#     - name: "Build mobile app & run tests"
#       run: |
#            echo "the realm app id is: $REALM_APP_ID"
#            cd inventory/clients/ios-swiftui/InventoryDemo
#            xcodebuild -project InventoryDemo.xcodeproj -scheme "ci" -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12 Pro Max,OS=14.4' -derivedDataPath './output' REALM_APP_ID='${{ env.REALM_APP_ID }}' test
# Could choose to skip deleting apps where tests fail so you could manually investigate
# Not currently working due to a bug in the realm-cli
#     - name: "Delete dynamically generated Realm app"
#       if: ${{ env.IS_DYNAMICALLY_GENERATED_APP }}
#       run: realm-cli app delete -a $REALM_APP_ID
      

